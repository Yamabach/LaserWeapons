<Block>
  <!-- Block definition file.
		 Optional elements are mostly out-commented.
		 Remember to insert appropriate values where specified,
		 the mod will not load correctly until you do.
		 Restart the game to load the block once this file is completed.
		 
		 Values that should always be changed are marked with "TODO".
		 
		 See the documentation for further information on any of these elements.
	-->

  <!-- Optional. Enables debug mode.
		 In debug mode, colliders and adding points are shown visually
		 to assist in positioning them correctly.
		 (Capsule colliders are shown as cubes, imagine their edges were rounded off.) -->
  <Debug>false</Debug>

  <!-- ID of your block. See "Note on IDs" in Mod.xml.
		 The ID must be unique among blocks in your mod.
		 It may conflict with blocks of other mods, the mod loader handles this.
		 The easiest way of assigning IDs is to use 1, 2, 3, etc.-->
  <ID>11</ID>

  <!-- Name of the block, shown in the user interface. -->
  <Name>Laser002</Name>

  <!-- TODO: Change the mass to something appropriate -->
  <Mass>3.5</Mass>

  <!-- Additional keywords that can be used to search for this block
		 in the search tab of the block bar.
		 
		 Blocks can always be searched for by name and author,
		 additional keywords can be specified here. -->
  <SearchKeywords>
    <Keyword>Laser</Keyword>
  </SearchKeywords>-->

  <!-- Optional.
		 Only has an effect if the OnFlip method in the block script is not overriden.
		 
	     Causes the Flipped property for the script to be set correctly. This is also used by
		 certain modules, like Spinning or Steering.
		 If an Arrow element is included, it is automatically flipped too. -->
  <!-- <CanFlip>true</CanFlip> -->

  <!-- Specify that this block is a replacement of an old modded block.
		 If this block has an equivalent that was created with the old community mod/block loader,
		 specifying its id here will make the game load this block when loading machines that contain the old block. -->
  <!-- <Replaces>410</Replaces> -->

  <!-- Normally, when a machine with a modded block is loaded, but that block is not loaded, the block will be ignored.
		 If the block has a fallback specified here, the fallback block is loaded instead in this scenario.
		 
		 Valid values are entries of the BlockType enum or the numeric ID of a block. Only normal blocks can be specified as
		 fallback, not modded blocks. -->
  <!--<Fallback>DoubleWoodenBlock</Fallback>-->

  <!-- <Script>Full Name of a BlockScript class, optional.</Script> -->

  <!-- Blocks can have certain predefined behaviour added without any custom code.
		 These behaviours are called modules.
		 The Shooting, Spewing, Spinning, and Steering modules are included by default
		 and mods can also add new modules.
		 Check the documentation for more information on how to use modules. -->

  <ModuleMapperTypes>
    <Key displayName="Shot" key="fire" default="C" />
    <Slider displayName="Power" key="power" min="100" max="700" default="700" unclamped="false"/>
    <!--<Slider displayName="range" key="range" min="10" max="10" default="10" unclamped="false"/>-->
    <Slider displayName="Rate Of Fire" key="rate-of-fire" min="2" max="2" default="2" unclamped="false"/>
    <Toggle displayName="Hold To Shoot" key="hold-to-shoot" default="true" />
  </ModuleMapperTypes>

  <Modules>

    <AdBlockProp modid="a4577151-2173-4084-a456-4b29e8d3e01f">
      <BlockState>
        <!-- Deault = 15000.if set 0,become infinity -->
        <JointStr>70000</JointStr>
        <!-- Deault = 0.6 -->
        <FrictionStr>0.1</FrictionStr>
        <!-- Deault = Discrete, select from Discrete, Continuous, ContinuousDynamic -->
        <CollisionType>Discrete</CollisionType>
      </BlockState>
      <SpringState>
      </SpringState>
      <RotateState>
      </RotateState>
    </AdBlockProp>

    <AdShootingProp modid="a4577151-2173-4084-a456-4b29e8d3e01f">

      <ShootingState>

        <Colliders>
          <CapsuleCollider>
            <Rotation x="0" y="0" z="0" />
            <Capsule direction="Z" radius="0.4" height="1" />
          </CapsuleCollider>
        </Colliders>

        <Mesh name="proj-001">
          <Position x="0.0" y="0.0" z="0.0" />
          <Rotation x="0.0" y="-90" z="0" />
          <Scale x="1.0" y="0.6" z="0.6" />
        </Mesh>

        <Texture name="projectiletex" />


        <Mass>0.2</Mass>
        <Drag>0.0</Drag>
        <AngularDrag>5.0</AngularDrag>
        <IgnoreGravity>True</IgnoreGravity>
        <EntityDamage>40</EntityDamage>
        <BlockDamage>0.4</BlockDamage>
        <Attaches>true</Attaches>
        <CollisionTypeS>ContinuousDynamic</CollisionTypeS>

      </ShootingState>

      <FireKey key="fire" />
      <PowerSlider key="power" />
      <RateOfFireSlider key="rate-of-fire" />
      <HoldToShootToggle key="hold-to-shoot" />

      <ProjectileStart>
        <Position x="0.0" y="-4" z="0.5" />
        <Rotation x="90" y="0.0" z="0.0" />
        <Scale x="1.0" y="1.0" z="1.0" />
      </ProjectileStart>

      <ShotFlashPosition>
        <Position x="0.0" y="-2.0" z="0.5" />
        <Rotation x="90" y="0.0" z="0.0" />
        <Scale x="1.0" y="1.0" z="1.0" />
      </ShotFlashPosition>

		<fuelConsumptionOnFire>150</fuelConsumptionOnFire>
		<useFreezingAttack>true</useFreezingAttack>

      <ShowPlaceholderProjectile>false</ShowPlaceholderProjectile>

      <DefaultAmmo>120</DefaultAmmo>
      <AmmoType>Cannon</AmmoType>
      <ProjectilesExplode>true</ProjectilesExplode>
      <ExplodeRadius>4.0</ExplodeRadius>
      <ExplodePower>12</ExplodePower>
      <ExplodeUpPower>0.0</ExplodeUpPower>

      <SupportsExplosionGodTool>False</SupportsExplosionGodTool>
      <ProjectilesDespawnImmediately>false</ProjectilesDespawnImmediately>

      <AssetBundleName name="L_myasset" />
      <!-- Prefab's name -->
      <ExplodeEffect>FrozenPrefab</ExplodeEffect>
      <ShotFlashEffect>BlueFlashPrefab</ShotFlashEffect>
      <TrailEffect>BulletTrailPrefab02</TrailEffect>
      <!-- <BulletEffect>GNParticlePrefab</BulletEffect> -->

      <RecoilMultiplier>0.6</RecoilMultiplier>
      <RandomInterval>0.03</RandomInterval>
      <RandomDiffusion>0.005</RandomDiffusion>

      <PoolSize>50</PoolSize>

      <Sounds>
        <AudioClip name="laser-002" />
      </Sounds>
      <HitSounds>
        <AudioClip name="hitsound-002" />
      </HitSounds>

    </AdShootingProp>

  </Modules>

  <!-- Include to make block take damage. -->
  <!-- <Health>20</Health> -->

  <!-- Optional.
		 The game generates "stripped" versions of the prefab,
		 these have some components and child objects removed and are used in MP where the full
		 object is not always necessary.
		 If you find that this stripping removes some components or child objects that you added to the prefab manually
		 and need on the stripped version, you can include a list of objects to keep using this. -->
  <!-- <KeepWhenStripped>
		<Object>SomeObjectName</Object>
	</KeepWhenStripped> -->

  <!-- Include to enable block to burn.
		 The Trigger element is optional. -->
  <!-- <FireInteraction burnDuration="5">
		<SphereTrigger>
			<Position x="0" y="0" z="0.61" />
			<Radius>1.5</Radius>
		</SphereTrigger>
	</FireInteraction> -->

  <!-- Include to make block freezable. -->
  <!-- <IceInteraction /> -->

  <!-- Optionally specify type of damage done to entities.
		 Can be one of "Blunt", "Sharp", "Fire" -->
  <!-- <DamageType>Blunt</DamageType> -->

  <Mesh name="laser-002mesh">
    <Position x="0.0" y="0.0" z="0" />
    <Rotation x="0.0" y="0.0" z="0" />
    <Scale x="0.5" y="0.5" z="0.5" />
  </Mesh>

  <Texture name="bodytex" />

  <Icon>
    <Position x="-0.1" y="-0.05" z="-1.0" />
    <Rotation x="-30.0" y="120.0" z="0.0" />
    <Scale x="0.12" y="0.12" z="0.12" />
  </Icon>

  <!-- Including this causes a direction arrow, like the one on wheels and other turnable blocks,
		 to be displayed. The child elements define how and where it is displayed. -->
  <!--<Arrow>
		<Position x="0" y="0" z="0" />
		<Rotation x="0" y="0" z="0" />
		<Scale x="1" y="1" z="1" />
	</Arrow>-->

  <!-- Optional.
		 Both child elements are optional.
		 Hammer can be used to specify the position and rotation of the end of the nail at the start of the hammer animation.
		 Colliders can be used to specify a different set of colliders to use for the ghost.
		 If it is not present, the colliders of the normal block will be used.
		 It is also possible to specify ignoreForGhost attributes for some of the normal colliders to use the normal set of
		 colliders with a few of them removed on the ghost.
		 If the Colliders element here is present, all ignoreForGhost attributes are ignored. -->
  <!-- <Ghost>
		<Hammer>
			<Position x="0" y="0" z="0.8" />
			<Rotation x="0" y="0" z="0" />
		</Hammer>
		<Colliders>
			<BoxCollider>
				<Position x="0.0" y="0.0" z="0.0" />
				<Rotation x="0.0" y="0.0" z="0.0" />
				<Scale x="1.0" y="1.0" z="1.0" />
			</BoxCollider>
		</Colliders>
	</Ghost> -->

  <Colliders>
    <CapsuleCollider>
      <Position x="0.0" y="-0.2" z="0.55" />
      <Rotation x="0.0" y="0.0" z="0.0" />
      <Capsule direction="Y" radius="0.3" height="2.0" />
    </CapsuleCollider>
  </Colliders>

  <BasePoint hasAddingPoint="false">
    <Stickiness enabled="true" radius="0.6" />
    <!-- Can only have motion if sticky -->
    <Motion x="false" y="false" z="false" />
  </BasePoint>

  <AddingPoints>
    <!-- TODO: Insert AddingPoint definitions here. Example:-->
  </AddingPoints>
</Block>